amcl:
  ros__parameters:
    use_sim_time: false

bt_navigator:
  ros__parameters:
    use_sim_time: false
    plugin: "nav2_bt_navigator/BtNavigator"
    bt_xml_filename: ""  # No need for custom behavior tree 
    default_bt_xml_filename: "/opt/ros/foxy/share/nav2_bt_navigator/behavior_trees/navigate_w_replanning_and_recovery.xml"
    plugin_lib_names:
      - "nav2_compute_path_to_pose_action_bt_node"
      - "nav2_follow_path_action_bt_node"
      - "nav2_back_up_action_bt_node"
      - "nav2_spin_action_bt_node"
      - "nav2_wait_action_bt_node"
      - "nav2_clear_costmap_service_bt_node"
      - "nav2_is_stuck_condition_bt_node"
      - "nav2_goal_reached_condition_bt_node"
      - "nav2_goal_updated_condition_bt_node"
      - "nav2_initial_pose_received_condition_bt_node"
      - "nav2_reinitialize_global_localization_service_bt_node"
      - "nav2_rate_controller_bt_node"
      - "nav2_distance_controller_bt_node"
      - "nav2_speed_controller_bt_node"
      - "nav2_truncate_path_action_bt_node"
      - "nav2_goal_updater_node_bt_node"
      - "nav2_recovery_node_bt_node"
      - "nav2_pipeline_sequence_bt_node"
      - "nav2_round_robin_node_bt_node"
      - "nav2_transform_available_condition_bt_node"
      - "nav2_time_expired_condition_bt_node"
      - "nav2_distance_traveled_condition_bt_node"

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 5.  # Restored to original value of 20.0 Hz
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.001
    min_theta_velocity_threshold: 0.001
    
    progress_checker_plugin: "progress_checker"
    goal_checker_plugin: "goal_checker"
    controller_plugins: ["FollowPath"]
    
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 3.
    
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 1.0  # Increased from 1.0 to 2.0 to be more forgiving with GPS navigation
      yaw_goal_tolerance: 3.14  # Increased to allow any orientation
      stateful: false
    
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: false  # Restored to original value
      min_vel_x: 0.0
      min_vel_y: 0.0
      max_vel_x: 2.0  # Restored to original value
      max_vel_y: 0.0
      max_vel_theta: 2.0  # Restored to original value
      min_speed_xy: 0.0
      max_speed_xy: 2.0  # Restored to original value
      min_speed_theta: 0.0
      acc_lim_x: 2.5  # Restored to original value
      acc_lim_y: 0.0
      acc_lim_theta: 3.2  # Restored to original value
      decel_lim_x: -2.5  # Restored to original value
      decel_lim_y: 0.0
      decel_lim_theta: -3.2  # Restored to original value
      vx_samples: 5  # Restored to original value
      vy_samples: 0
      vtheta_samples: 10  # Restored to original value
      sim_time: 1.7  # Restored to original value
      linear_granularity: 0.1
      angular_granularity: 0.1
      transform_tolerance: 0.2  # Restored to original value
      critics: ["ObstacleFootprint", "GoalAlign", "PathAlign", "GoalDist", "PathDist"]
      
      ObstacleFootprint:
        scale: 1.0  # Restored to original value
      GoalAlign:
        scale: 1.0  # Restored to original value
        forward_point_distance: 0.325  # Restored to original value
      PathAlign:
        scale: 1.0  # Restored to original value
        forward_point_distance: 0.325  # Restored to original value
      GoalDist:
        scale: 2.0  # Restored to original value
      PathDist:
        scale: 32.0  # Restored to original value

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: false
      rolling_window: true
      width: 20
      height: 20
      origin_x: -1.5
      origin_y: -1.5
      resolution: 0.05
      footprint: "[[-0.21, -0.21], [-0.21, 0.21], [0.21, 0.21], [0.21, -0.21]]"
      plugins: ["obstacle_layer", "inflation_layer"]
      track_unknown_space: false
      always_send_full_costmap: true
      
      # Explicitly disable static layer
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        enabled: false
        map_subscribe_transient_local: true
      
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: true
          marking: true
          data_type: "LaserScan"
      
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.55

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: false
      robot_radius: 0.22
      resolution: 0.05
      rolling_window: true
      width: 25
      height: 25
      origin_x: -5.
      origin_y: -5.
      plugins: ["obstacle_layer", "inflation_layer"]
      track_unknown_space: false
      always_send_full_costmap: true
      
      # Explicitly disable static layer
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        enabled: false
        map_subscribe_transient_local: true
      
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: true
          marking: true
          data_type: "LaserScan"
      
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.55

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: false
    planner_plugins: ["GridBased"]
    
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 2.0  # Increased from 0.5 to 2.0 to be more forgiving with GPS navigation
      use_astar: false
      allow_unknown: true

recoveries_server:
  ros__parameters:
    use_sim_time: false
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    
    # Configure the recovery behaviors with correct plugin names
    recovery_plugins: ["spin", "backup", "wait"]
    
    # Make spin recovery less aggressive
    spin:
      plugin: "nav2_recoveries/Spin"  # Fixed plugin name format
      spin_dist: 0.785  # Quarter PI, only rotate 45 degrees during spin recovery
      
    # Configure backup recovery to move just a little
    backup:
      plugin: "nav2_recoveries/BackUp"  # Fixed plugin name format
      speed: 0.1
      backup_dist: 0.2
      
    # Add wait recovery to pause before trying again
    wait:
      plugin: "nav2_recoveries/Wait"  # Fixed plugin name format
      wait_duration: 2.0

waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: false
    use_sim_time: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: true
      wait_duration: 1.0  # Restored to original value

